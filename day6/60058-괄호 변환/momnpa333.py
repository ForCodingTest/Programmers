from collections import Counter

def solution(p):
    
    answer = ''
    
    u=two(p)
    
    return u
    

def two(p):
    if p=='':
        return p
    #2 
    u=''
    v=''
    op=0
    for i in p:
        u+=i
        if Counter(u)['(']==Counter(u)[')']:
            v=p[len(u):]
            break
    for i in u:
        if i=='(':
            op+=1
        else:
            op-=1
        if op<0:
            u=four(u,v)
            return u
    else:
        v=two(v)
        return u+v

def four(u,v):
    s='('
    s+=two(v)
    s+=')'
    u=u[1:-1]
    w=''
    for i in u:
        if i=="(":
            w+=")"
        else:
            w+="("
    s+=w
    return s
    
    




# 00:15
# 00:49

# 1. 문제점을 발견하고 수정하라는 업무 과제
# 2.  괄호가 개수는 맞지만 짝이 맞지 않은 형태로 작성되어 오류가 나는 것을 알게 되었습니다.
# 3. '(' 와 ')' 로만 이루어진 문자열이 있을 경우, '(' 의 개수와 ')' 의 개수가 같다면 이를 균형잡힌 괄호 문자열
# 4. 그리고 여기에 '('와 ')'의 괄호의 짝도 모두 맞을 경우에는 이를 올바른 괄호 문자열이라고 부릅니다.

# 1. 입력이 빈 문자열인 경우, 빈 문자열을 반환합니다. 
# 2. 문자열 w를 두 "균형잡힌 괄호 문자열" u, v로 분리합니다. 단, u는 "균형잡힌 괄호 문자열"로 더 이상 분리할 수 없어야 하며, v는 빈 문자열이 될 수 있습니다. 
# 3. 문자열 u가 "올바른 괄호 문자열" 이라면 문자열 v에 대해 1단계부터 다시 수행합니다. 
#   3-1. 수행한 결과 문자열을 u에 이어 붙인 후 반환합니다. 
# 4. 문자열 u가 "올바른 괄호 문자열"이 아니라면 아래 과정을 수행합니다. 
#   4-1. 빈 문자열에 첫 번째 문자로 '('를 붙입니다. 
#   4-2. 문자열 v에 대해 1단계부터 재귀적으로 수행한 결과 문자열을 이어 붙입니다. 
#   4-3. ')'를 다시 붙입니다. 
#   4-4. u의 첫 번째와 마지막 문자를 제거하고, 나머지 문자열의 괄호 방향을 뒤집어서 뒤에 붙입니다. 
#   4-5. 생성된 문자열을 반환합니다.